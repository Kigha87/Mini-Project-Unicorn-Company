-- 1.How many customers do we have in the data?

SELECT COUNT(customer_id) AS total_customers
FROM customers;

--------------------------------------------------------------------------------------------------

--2.What was the city with the most profit for the company in 2015?

SELECT o.shipping_city AS city,
       SUM(od.order_profits
          ) AS total_profit
       
FROM orders o
    JOIN order_details od ON o.order_id = od.order_id
WHERE 
   o.order_date BETWEEN '2015-01-01' AND '2015-12-31'
 GROUP BY city
 ORDER BY total_profit DESC
 LIMIT 1;
 -----------------------------------------------------------------------------------------------------
 
 --3.In 2015, what was the most profitable city's profit?
 

WITH city_profits AS (
    SELECT 
        o.shipping_city,
        SUM(od.order_profits) AS total_profit
    FROM 
        orders o
    JOIN 
        order_details od ON o.order_id = od.order_id
    WHERE 
        EXTRACT(YEAR FROM o.order_date) = 2015
    GROUP BY 
        o.shipping_city
)
SELECT 
    MAX(total_profit) AS most_profitable_profit
FROM 
    city_profits;

---------------------------------------------------------------------------------------------------------


 --4.How many different cities do we have in the data?
 
 SELECT COUNT(DISTINCT o.shipping_city) AS cities
 FROM orders o;
 ----------------------------------------------------------------------------------------------------
 
 --5.Show the total spent by customers from low to high.
 
 SELECT 
    c.customer_name,
    SUM(od.order_sales) AS total_spent
FROM 
    customers c
JOIN 
    orders o ON c.customer_id = o.customer_id
JOIN 
    order_details od ON o.order_id = od.order_id
GROUP BY 
    c.customer_name
ORDER BY 
    total_spent ASC;
----------------------------------------------------------------------------------------------------
    
--6.What is the most profitable city in the State of Tennessee?

  SELECT 
    o.shipping_city,
    SUM(od.order_profits) AS total_profit
FROM 
    orders o
INNER JOIN 
    order_details od ON o.order_id = od.order_id
WHERE 
    o.shipping_state = 'Tennessee'
GROUP BY 
    o.shipping_city
ORDER BY 
    total_profit DESC
LIMIT 1;
 ------------------------------------------------------------------------------------------------------------
 
--7.What’s the average annual profit for that city across all years?
SELECT 
    EXTRACT(YEAR FROM o.order_date) AS year,
    AVG(od.order_profits) AS avg_annual_profit
FROM 
    orders o
INNER JOIN 
    order_details od ON o.order_id = od.order_id
WHERE 
    o.shipping_city ='Lebanon'
GROUP BY 
    year
ORDER BY 
    year;
 
 ----------------------------------------------------------------------------------------------------------------
 
 
 --8.What is the distribution of customer types in the data?

SELECT customer_segment, 
         COUNT(*) AS count_per_segment
FROM customers
GROUP BY customer_segment
---------------------------------------------------------------------------------------------------------------

--9.What’s the most profitable product category on average in Iowa across all years?

SELECT 
    p.product_category,
    AVG(od.order_profits) AS avg_profit
FROM 
    product p
LEFT JOIN 
    order_details od ON p.product_id = od.product_id
LEFT JOIN 
    orders o ON od.order_id = o.order_id
WHERE 
    o.shipping_state = 'Iowa'
GROUP BY 
    p.product_category
ORDER BY 
    avg_profit DESC
LIMIT 1;
-- WE CAN ALSO USE INNER JOIN TO HAVE THE SAME RESULT
---------------------------------------------------------------------------------------------------------------

--10.What is the most popular product in that category across all states in 2016?

WITH popular_category AS (
    SELECT 
        p.product_category
    FROM 
        product p
    JOIN 
        order_details od ON p.product_id = od.product_id
    JOIN 
        orders o ON od.order_id = o.order_id
    WHERE 
        o.shipping_state = 'Iowa'
    GROUP BY 
        p.product_category
ORDER BY 
        AVG(od.order_profits) DESC
    LIMIT 1
)
SELECT 
    p.product_name,
    SUM(od.quantity) AS total_quantity
FROM 
    product p
 JOIN 
    order_details od ON p.product_id = od.product_id
 JOIN 
    orders o ON od.order_id = o.order_id
WHERE 
    p.product_category = (SELECT product_category FROM popular_category)
    AND EXTRACT(YEAR FROM o.order_date) = 2016
GROUP BY 
    p.product_name
ORDER BY 
    total_quantity DESC
LIMIT 1;
-- LEFT JOIN CAN BE USED
-----------------------------------------------------------------------------------------------------------------

--11.Which customer got the most discount in the data? (in total amount)

SELECT 
    c.customer_name,
    ROUND(SUM(od.order_discount),0) AS total_discount
FROM 
    customers c
 JOIN 
    orders o ON c.customer_id = o.customer_id
 JOIN 
    order_details od ON o.order_id = od.order_id
GROUP BY 
    c.customer_name
ORDER BY 
    total_discount DESC
LIMIT 1;
------------------------------------------------------------------------------------------------------------------------

--12. How widely did monthly profits vary in 2018?

WITH monthly_profits AS (
    SELECT 
        EXTRACT(MONTH FROM o.order_date) AS month,
        SUM(od.order_profits) AS total_profit
    FROM 
        orders o
    LEFT JOIN 
        order_details od ON o.order_id = od.order_id
    WHERE 
        EXTRACT(YEAR FROM o.order_date) = 2018
    GROUP BY 
        EXTRACT(MONTH FROM o.order_date)
)
SELECT 
    MAX(total_profit) - MIN(total_profit) AS profit_variation
FROM 
    monthly_profits;
 -- INNER JOIN CAN ALSO BE USED
-------------------------------------------------------------------------------------------------------------------------

--13. Which was the biggest order regarding sales in 2015?

SELECT 
    od.order_id,
    SUM(od.order_sales) AS total_sales
FROM 
    order_details od
LEFT JOIN 
    orders o ON od.order_id = o.order_id
WHERE 
    EXTRACT(YEAR FROM o.order_date) = 2015
GROUP BY 
    od.order_id
ORDER BY 
    total_sales DESC
LIMIT 1;
----------------------------------------------------------------------------------------------------------------------------

--14.What was the rank of each city in the East region in 2015 in quantity?

WITH city_quantities AS (
    SELECT 
        o.shipping_city,
        SUM(od.quantity) AS total_quantity
    FROM 
        orders o
    JOIN 
        order_details od ON o.order_id = od.order_id
    WHERE 
        o.shipping_region = 'East' 
        AND EXTRACT(YEAR FROM o.order_date) = 2015
    GROUP BY 
        o.shipping_city
)
SELECT 
    shipping_city,
    total_quantity,
    RANK() OVER (ORDER BY total_quantity DESC) AS rank
FROM 
    city_quantities;
-------------------------------------------------------------------------------------------------------------------------------------------
-- 15 Display customer names for customers who are in the segment ‘Consumer’ or ‘Corporate.’
--How many customers are there in total?

SELECT 
    c.customer_name
FROM 
    customers c
WHERE 
    c.customer_segment IN ('Consumer', 'Corporate');

SELECT 
    COUNT(*) AS total_customers
FROM 
    customers
WHERE 
    customer_segment IN ('Consumer', 'Corporate');
-------------------------------------------------------------------------------------------------------------------------------------
    
--16. Calculate the difference between the largest and smallest order quantities for product id ‘100.’

SELECT 
    MAX(od.quantity) - MIN(od.quantity) AS quantity_difference
FROM 
    order_details od
WHERE 
    od.product_id = '100';
------------------------------------------------------------------------------------------------------------------------------------
    
--17. Calculate the percent of products that are within the category ‘Furniture.’

WITH total_products AS (
    SELECT 
        COUNT(*) AS total_count
    FROM 
        product
),
furniture_products AS (
    SELECT 
        COUNT(*) AS furniture_count
    FROM 
        product
    WHERE 
        product_category = 'Furniture'
)
SELECT 
    (furniture_count::DECIMAL / total_count) * 100 AS furniture_percentage
FROM 
    total_products, furniture_products;
------------------------------------------------------------------------------------------------------------------------------------
    
--18 Display the number of product manufacturers with more than 1 product in the product table.

SELECT 
    product_manufacturer,
    COUNT(*) AS product_count
FROM 
    product
GROUP BY 
    product_manufacturer
HAVING 
    COUNT(*) > 1;
---------------------------------------------------------------------------------------------------------------------------------------
    
--19. Show the product_subcategory and the total number of products in the subcategory.

SELECT 
    product_subcategory,
    COUNT(*) AS total_products
FROM 
    product
GROUP BY 
    product_subcategory;
--------------------------------------------------------------------------------------------------------------------------------------
    
--20. Show the order from most to least products and then by product_subcategory name ascending.

SELECT 
    product_subcategory,
    COUNT(*) AS total_products
FROM 
    product
GROUP BY 
    product_subcategory
ORDER BY 
    total_products DESC, 
    product_subcategory ASC;
----------------------------------------------------------------------------------------------------------------------------------------


--Bonus question:
--Join all database tables into one dataset that includes all unique columns 
--and download it as a .csv file.

SELECT *
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN order_details od ON o.order_id = od.order_id
JOIN product p ON od.product_id = p.product_id


WITH temp_tab AS(
  SELECT
     o.customer_id AS customer_id,
  CASE WHEN od.order_discount !=0 THEN (od.order_sales * od.order_discount)
  ELSE order_discount
  END AS total_discount
  FROM orders o
  JOIN order_details od ON o.order_id = od.order_id)
  SELECT customer_id,
  SUM(total_discount) AS total_discount
  FROM temp_tab
  GROUP BY 1
  ORDER BY 2 DESC;


select c.customer id
from customers c
   left join orders o on c.customer_id = o.customer_id
where customer_name = 'Lela Donovan'
